Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.

class Solution(object):
    def moveZeroes(self, nums):
        """
        :type nums: List[int]
        :rtype: None Do not return anything, modify nums in-place instead.
        """
        n = len(nums)
        i = 0
        for j in range(n):
            if (nums[j] != 0):
                nums[i], nums[j] = nums[j], nums[i]
                i += 1   
                
We use i to keep track of position of the first zero in the list (which changes as we go).
We usejto keep track of the first non-zero value after the first zero (which is pointed by i).
Each time we have i correctly points to a zero and j correctly points to the first non-zero after i, we swap the values that store at i and j.
By doing this, we move zeros towards the end of the list gradually until j reaches the end.
And when it does, we are done.
